plugins {
    id("java")
    id("kotlin")
    id("jacoco")
    id("maven-publish")
}

group = rootProject.group
version = rootProject.version

repositories {
    jcenter()
    maven { url 'https://jitpack.io' }
}

dependencies {
    // kotlin
    api project(":trellis-core")
    implementation 'com.github.copper-leaf:kudzu:2b73744eac'

    // testing
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.1.0"
    testCompile "org.junit.jupiter:junit-jupiter-api:5.1.0"
    testCompile "org.junit.jupiter:junit-jupiter-params:5.1.0"
    testCompile "io.strikt:strikt-core:0.17.2"
}

sourceCompatibility = JavaVersion.VERSION_1_8
java {
    withSourcesJar()
}
compileKotlin {
    kotlinOptions.jvmTarget = "1.6"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
test {
    useJUnitPlatform()
    testLogging {
        showStandardStreams = true
    }
}
jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled false
    }
}

task deploy {
    doLast {}
}

tasks.check.dependsOn jacocoTestReport

// Code Coverage Reports
//----------------------------------------------------------------------------------------------------------------------
task codeCoverageReport(type: JacocoReport) {
    dependsOn test

    executionData fileTree(project.rootDir.absolutePath).include("**/build/jacoco/*.exec")
    sourceSets sourceSets.main

    reports {
        xml.enabled true
        html.enabled false
        csv.enabled false
    }
}

configurations { codacy }
dependencies {
    codacy 'com.github.codacy:codacy-coverage-reporter:4.0.2'
}
task sendCoverageToCodacy(type: JavaExec) {
    dependsOn codeCoverageReport

    main = "com.codacy.CodacyCoverageReporter"
    classpath = configurations.codacy
    args = [
            "report",
            "-l", "Java",
            "-r", "${buildDir}/reports/jacoco/report.xml",
            "-t", "${System.getenv("CODACY_PROJECT_TOKEN")}",
            "--language", "Kotlin"
    ]
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId = project.group
            artifactId = project.name
            version = project.version

            from components.java
        }
    }
}
